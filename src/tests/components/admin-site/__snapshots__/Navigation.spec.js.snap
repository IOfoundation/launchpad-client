// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Admin-site <Navigation /> renders snapshot of Navigation 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(WithStyles(withRouter(Navigation)))
    location={
      Object {
        "pathname": "/admin/profile",
      }
    }
  >
    <WithStyles(withRouter(Navigation))
      auth={null}
      errors={Array []}
      location={
        Object {
          "pathname": "/admin/profile",
        }
      }
      organization={Object {}}
      organizationId={1}
      profile={
        Object {
          "updateCompany": [Function],
          "updatePublishStatus": [Function],
        }
      }
      schemaFail={false}
      schemaValidated={false}
      snackbar={
        Object {
          "hideSnackbar": [Function],
          "showSnackbar": [Function],
          "testingSnackbar": [Function],
        }
      }
      success={false}
      updatedOrganization={Object {}}
      yupActions={
        Object {
          "validateSchema": [Function],
        }
      }
    >
      <withRouter(Navigation)
        auth={null}
        classes={
          Object {
            "addBorder": "withRouter-Navigation--addBorder-5",
            "container": "withRouter-Navigation--container-1",
            "description": "withRouter-Navigation--description-3",
            "link": "withRouter-Navigation--link-6",
            "navigation": "withRouter-Navigation--navigation-4",
            "title": "withRouter-Navigation--title-2",
          }
        }
        errors={Array []}
        location={
          Object {
            "pathname": "/admin/profile",
          }
        }
        organization={Object {}}
        organizationId={1}
        profile={
          Object {
            "updateCompany": [Function],
            "updatePublishStatus": [Function],
          }
        }
        schemaFail={false}
        schemaValidated={false}
        snackbar={
          Object {
            "hideSnackbar": [Function],
            "showSnackbar": [Function],
            "testingSnackbar": [Function],
          }
        }
        success={false}
        updatedOrganization={Object {}}
        yupActions={
          Object {
            "validateSchema": [Function],
          }
        }
      >
        <Navigation
          auth={null}
          classes={
            Object {
              "addBorder": "withRouter-Navigation--addBorder-5",
              "container": "withRouter-Navigation--container-1",
              "description": "withRouter-Navigation--description-3",
              "link": "withRouter-Navigation--link-6",
              "navigation": "withRouter-Navigation--navigation-4",
              "title": "withRouter-Navigation--title-2",
            }
          }
          errors={Array []}
          location={
            Object {
              "pathname": "/admin/profile",
            }
          }
          organization={Object {}}
          organizationId={1}
          profile={
            Object {
              "updateCompany": [Function],
              "updatePublishStatus": [Function],
            }
          }
          schemaFail={false}
          schemaValidated={false}
          snackbar={
            Object {
              "hideSnackbar": [Function],
              "showSnackbar": [Function],
              "testingSnackbar": [Function],
            }
          }
          success={false}
          updatedOrganization={Object {}}
          yupActions={
            Object {
              "validateSchema": [Function],
            }
          }
        >
          <div
            className="withRouter-Navigation--container-1"
          >
            <WithStyles(Modal)
              activeClicked={[Function]}
              cancelClicked={[Function]}
              modalClosed={[Function]}
              open={false}
              schemaFail={false}
              schemaValidated={false}
              statusPicked={false}
            >
              <Modal
                activeClicked={[Function]}
                cancelClicked={[Function]}
                classes={
                  Object {
                    "alert": "Modal-alert-7",
                    "btn": "Modal-btn-9",
                    "modal": "Modal-modal-8",
                    "title": "Modal-title-10",
                  }
                }
                modalClosed={[Function]}
                open={false}
                schemaFail={false}
                schemaValidated={false}
                statusPicked={false}
              >
                <WithStyles(Modal)
                  onClose={[Function]}
                  open={false}
                >
                  <Modal
                    BackdropComponent={[Function]}
                    classes={
                      Object {
                        "hidden": "MuiModal-hidden-12",
                        "root": "MuiModal-root-11",
                      }
                    }
                    closeAfterTransition={false}
                    disableAutoFocus={false}
                    disableBackdropClick={false}
                    disableEnforceFocus={false}
                    disableEscapeKeyDown={false}
                    disablePortal={false}
                    disableRestoreFocus={false}
                    hideBackdrop={false}
                    keepMounted={false}
                    manager={
                      ModalManager {
                        "data": Array [],
                        "handleContainerOverflow": true,
                        "hideSiblingNodes": true,
                        "modals": Array [],
                      }
                    }
                    onClose={[Function]}
                    open={false}
                  />
                </WithStyles(Modal)>
              </Modal>
            </WithStyles(Modal)>
            <h3
              className="withRouter-Navigation--title-2"
            >
              Your organization
            </h3>
            <p
              className="withRouter-Navigation--description-3"
            >
              Your organization display name has not been set.
            </p>
            <ul
              className="withRouter-Navigation--navigation-4 withRouter-Navigation--addBorder-5"
            >
              <li>
                <Link
                  activeStyle={
                    Object {
                      "color": "#00ba81",
                      "fontFamily": "\\"proxima-nova-bold\\", Georgia, sans-serif",
                      "opacity": 1,
                    }
                  }
                  className="withRouter-Navigation--link-6"
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to="/admin/profile"
                >
                  <a
                    className="withRouter-Navigation--link-6"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    Profile
                  </a>
                </Link>
              </li>
              <li>
                <Link
                  activeStyle={
                    Object {
                      "color": "#00ba81",
                      "fontFamily": "\\"proxima-nova-bold\\", Georgia, sans-serif",
                      "opacity": 1,
                    }
                  }
                  className="withRouter-Navigation--link-6"
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to="/admin/location"
                >
                  <a
                    className="withRouter-Navigation--link-6"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    Locations
                  </a>
                </Link>
              </li>
              <li>
                <Link
                  activeStyle={
                    Object {
                      "color": "#00ba81",
                      "fontFamily": "\\"proxima-nova-bold\\", Georgia, sans-serif",
                      "opacity": 1,
                    }
                  }
                  className="withRouter-Navigation--link-6"
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to="/admin/blog"
                >
                  <a
                    className="withRouter-Navigation--link-6"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    Blog Posts
                  </a>
                </Link>
              </li>
              <li>
                <Link
                  activeStyle={
                    Object {
                      "color": "#00ba81",
                      "fontFamily": "\\"proxima-nova-bold\\", Georgia, sans-serif",
                      "opacity": 1,
                    }
                  }
                  className="withRouter-Navigation--link-6"
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to="/admin/events"
                >
                  <a
                    className="withRouter-Navigation--link-6"
                    onClick={[Function]}
                    style={Object {}}
                  >
                    Events
                  </a>
                </Link>
              </li>
            </ul>
            <h3
              className="withRouter-Navigation--title-2 m-top-16"
            >
              Status
            </h3>
            <p
              className="withRouter-Navigation--description-3"
            >
              Not Published
            </p>
            <button
              className="btn btn__green"
              onClick={[Function]}
            >
              Publish
            </button>
          </div>
        </Navigation>
      </withRouter(Navigation)>
    </WithStyles(withRouter(Navigation))>
  </Connect(WithStyles(withRouter(Navigation)))>
</Provider>
`;
